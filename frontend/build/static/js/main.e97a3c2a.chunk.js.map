{"version":3,"sources":["globals/useToken.js","components/FoodTypes.js","screens/RegisterScreen.js","components/ProgressIndicator.js","screens/DashboardScreen.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","restaurantName","token","loggedIn","FoodTypes","_ref","currentTypes","setTypes","foodTypes","react_default","a","createElement","style","flexDirection","padding","map","e","index_es","key","onClick","includes","splice","indexOf","Object","toConsumableArray","concat","label","variant","FOOD_TYPES","registerRestaurant","name","latLng","types","fetch","method","headers","Content-Type","body","JSON","stringify","location","then","r","json","styles","container","flex","alignItems","justifyContent","height","paddingTop","alignSelf","card","width","content","RegisterScreen","_useState","useState","_useState2","slicedToArray","setName","_useState3","lat","lng","_useState4","setLatLng","_useState5","_useState6","_useContext","useContext","_useContext2","setAuth","title","placeholder","value","onChange","target","components_FoodTypes","alert","error","restaurant","ProgressIndicator","src","IncomingOrder","picture","deliverTime","onAccept","onDecline","toppings","component","alt","image","fontSize","paddingBottom","DashboardScreen_Toppings","PosedDiv","posed","div","visible","opacity","hidden","Toppings","_ref2","DelieveredOrder","_ref3","onDelivered","AcceptedOrder","_ref4","onShipped","PosedAcceptedOrder","props","mounted","setMount","useEffect","pose","DashboardScreen_AcceptedOrder","socket","WebSocket","grid","display","gridTemplateColumns","gridColumnGap","gridRowGap","gridContainer","DashboardScreen","orders","setOrders","addEventListener","msg","order","parse","data","undefined","foodType","console","log","addOrder","price","status","acceptOrder","newOrders","filter","obj","id","objectSpread","send","deliveredOrder","fontWeight","length","components_ProgressIndicator","assign","DashboardScreen_DelieveredOrder","DashboardScreen_IncomingOrder","App","auth","_useCookies","useCookies","_useCookies2","cookies","setCookie","setAuthContext","useToken","Provider","screens_DashboardScreen","screens_RegisterScreen","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e97a3c2a.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst AuthContext = createContext({\n  restaurantName: '',\n  token: null,\n  loggedIn: false\n})\n\nexport default AuthContext\n","import React from 'react'\nimport { Chip } from '@material-ui/core'\n\nconst FoodTypes = ({ currentTypes, setTypes, foodTypes }) => (\n  <div style={{ flexDirection: 'row', padding: 8 }}>\n    {foodTypes.map(e => (\n      <Chip\n        key={e}\n        onClick={() => {\n          if (currentTypes.includes(e)) {\n            currentTypes.splice(currentTypes.indexOf(e), 1)\n            setTypes([...currentTypes])\n          } else {\n            setTypes([...currentTypes, e])\n          }\n        }}\n        label={e}\n        variant={currentTypes.includes(e) ? 'default' : 'outlined'}\n        padding={4}\n      />\n    ))}\n  </div>\n)\n\nexport default FoodTypes\n","import React, { useState, useContext } from 'react'\nimport { Input, Card, CardHeader, CardContent, Button } from '@material-ui/core'\nimport AuthContext from '../globals/useToken'\nimport FoodTypes from '../components/FoodTypes'\n\nconst FOOD_TYPES = ['Burger', 'Kebab', 'Pizza']\nconst url = '/restaurant/register'\n\nconst registerRestaurant = ({ name, latLng, types }) =>\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      location: latLng,\n      foodTypes: types\n    })\n  }).then(r => r.json())\n\nfunction RegisterScreen() {\n  const [name, setName] = useState('')\n  const [latLng, setLatLng] = useState({ lat: '', lng: '' })\n  const [types, setTypes] = useState([])\n  const { lat, lng } = latLng\n  const [_, setAuth] = useContext(AuthContext)\n\n  const onSubmit = () => {\n    if (name === '' || lat === '' || lng === '')\n      alert('Please enter all the fields.')\n    else {\n      registerRestaurant({ name, latLng, types }).then(r => {\n        if (r.error) {\n          alert(r.error)\n          return null\n        } else {\n          setAuth({\n            restaurant: name,\n            token: r.token,\n            loggedIn: true\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <div style={styles.container}>\n      <Card style={styles.card}>\n        <CardHeader title=\"UNLABELLED for restaurants\" />\n        <CardContent style={styles.content}>\n          <Input\n            placeholder=\"restaurant name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <div style={{ flexDirection: 'row' }}>\n            <Input\n              placeholder=\"lattitude\"\n              value={lat}\n              onChange={e => setLatLng({ lat: e.target.value, lng })}\n            />\n            <Input\n              placeholder=\"longitude\"\n              value={lng}\n              onChange={e => setLatLng({ lat, lng: e.target.value })}\n            />\n          </div>\n          <FoodTypes\n            currentTypes={types}\n            foodTypes={FOOD_TYPES}\n            setTypes={setTypes}\n          />\n          <Button onClick={onSubmit}>Register</Button>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: !'100%',\n    paddingTop: '200px',\n    alignSelf: 'center'\n  },\n  card: { flexDirection: 'column', width: '400px' },\n  content: { flexDirection: 'column' }\n}\n\nexport default RegisterScreen\n","import React from 'react'\n\nconst ProgressIndicator = () => <img src=\"https://i.imgur.com/xN4UYUs.gif\" />\n\nexport default ProgressIndicator\n","import React, { useContext, useEffect, useState } from 'react'\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia\n} from '@material-ui/core'\nimport AuthContext from '../globals/useToken'\nimport ProgressIndicator from '../components/ProgressIndicator'\nimport posed from 'react-pose'\n\nconst ORDERS = [\n  {\n    name: 'Pizza order',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes',\n    status: 'incoming',\n    id: 2323\n  },\n  {\n    name: 'Food order',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes',\n    status: 'delivered',\n    id: 2325\n  },\n  {\n    name: 'Food order',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes',\n    status: 'accepted',\n    id: 2311\n  },\n  {\n    name: 'Food order',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes',\n    status: 'incoming',\n    id: 888\n  },\n  {\n    name: 'Food order',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes',\n    status: 'incoming',\n    id: 287\n  }\n]\n\nconst IncomingOrder = ({\n  name,\n  picture,\n  deliverTime,\n  onAccept,\n  onDecline,\n  toppings\n}) => (\n  <Card style={{ flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      alt=\"Contemplative Reptile\"\n      height=\"140px\"\n      image={picture}\n      title=\"Contemplative Reptile\"\n    />\n    <CardContent\n      style={{ flexDirection: 'column', flex: 1, alignItems: 'center' }}\n    >\n      <div style={{ fontSize: 23, paddingBottom: 8 }}>{name}</div>\n      <div style={{ paddingBottom: 8 }}>Delivery {deliverTime}</div>\n      <Toppings toppings={toppings} />\n      <div\n        style={{ flexDirection: 'row', flex: 1, justifyContent: 'flex-end' }}\n      >\n        <Button style={{ flex: 1 }} onClick={onAccept}>\n          Accept\n        </Button>\n        <Button style={{ flex: 1 }} onClick={onDecline}>\n          Decline\n        </Button>\n      </div>\n    </CardContent>\n  </Card>\n)\n\nconst PosedDiv = posed.div({\n  visible: { opacity: 1 },\n  hidden: { opacity: 0 }\n})\n\nconst Toppings = ({ toppings }) => toppings.map(e => <h5> {e} </h5>)\n\nconst DelieveredOrder = ({\n  name,\n  picture,\n  deliverTime,\n  onDelivered,\n  toppings\n}) => (\n  <Card style={{ flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      alt=\"Contemplative Reptile\"\n      height=\"140px\"\n      image={picture}\n      title=\"Contemplative Reptile\"\n    />\n    <CardContent\n      style={{\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingBottom: '0px !important'\n      }}\n    >\n      <div style={{ fontSize: 23, paddingBottom: 8 }}>{name}</div>\n      <div style={{ paddingBottom: 8 }}>Accepted order {deliverTime}</div>\n      <Toppings toppings={toppings} />\n      <Button onClick={onDelivered}>Delivered ✔️</Button>\n    </CardContent>\n  </Card>\n)\n\nconst AcceptedOrder = ({ name, picture, deliverTime, onShipped, toppings }) => (\n  <Card style={{ flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      alt=\"Contemplative Reptile\"\n      height=\"140px\"\n      image={picture}\n      title=\"Contemplative Reptile\"\n    />\n    <CardContent\n      style={{\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingBottom: '0px !important'\n      }}\n    >\n      <div style={{ fontSize: 23, paddingBottom: 8 }}>{name}</div>\n      <div style={{ paddingBottom: 8 }}>Accepted order {deliverTime}</div>\n      <Toppings toppings={toppings} />\n      <Button onClick={onShipped}>Shipped</Button>\n    </CardContent>\n  </Card>\n)\n\nfunction PosedAcceptedOrder(props) {\n  const [mounted, setMount] = useState(false)\n\n  useEffect(() => {\n    setMount(true)\n    return () => {\n      setMount(false)\n    }\n  }, [])\n\n  return (\n    <PosedDiv pose={mounted ? 'visible' : 'hidden'}>\n      <AcceptedOrder {...props} />\n    </PosedDiv>\n  )\n}\n\nconst WEB_SOCKET_URL = 'ws://twinone.xyz:17001/ws'\nconst socket = new WebSocket(WEB_SOCKET_URL)\n\nfunction DashboardScreen() {\n  const [{ restaurantName }, setAuth] = useContext(AuthContext)\n  const [orders, setOrders] = useState([])\n\n  const addOrder = order => {\n    setOrders([order, ...orders])\n  }\n\n  useEffect(() => {\n    socket.addEventListener('message', msg => {\n      const order = JSON.parse(msg.data)\n\n      if (order.foodType !== undefined) {\n        console.log(order)\n\n        addOrder({\n          picture:\n            'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n          name: order.foodType + ' Order',\n          price: order.price,\n          latLng: [order.lat, order.lng],\n          toppings: order.toppings,\n          status: 'incoming'\n        })\n      }\n    })\n  }, [])\n\n  const deleteOrder = id => () => {\n    const newOrders = orders.filter(obj => obj.id !== id)\n    setOrders(newOrders)\n    socket.send(\n      JSON.stringify({\n        status: 'rejected'\n      })\n    )\n  }\n\n  const acceptOrder = order => () => {\n    const newOrders = orders.filter(obj => obj.id !== order.id)\n    setOrders([{ ...order, status: 'accepted' }, ...newOrders])\n    socket.send(\n      JSON.stringify({\n        status: 'accepted'\n      })\n    )\n  }\n\n  const shipOrder = order => () => {\n    const newOrders = orders.filter(obj => obj.id !== order.id)\n    setOrders([{ ...order, status: 'delivered' }, ...newOrders])\n    socket.send(\n      JSON.stringify({\n        status: 'shipped'\n      })\n    )\n  }\n\n  const deliveredOrder = order => () => {\n    const newOrders = orders.filter(obj => obj.id !== order.id)\n    setOrders(newOrders)\n    socket.send(\n      JSON.stringify({\n        status: 'delivered'\n      })\n    )\n  }\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n        flexDirection: 'column'\n      }}\n    >\n      <div>\n        <h1\n          style={{\n            fontWeight: '200'\n          }}\n        >\n          {restaurantName}\n        </h1>\n      </div>\n      {orders.length === 0 ? (\n        <ProgressIndicator />\n      ) : (\n        <div style={styles.gridContainer}>\n          <h4>Orders</h4>\n          <div style={styles.grid}>\n            {orders.map(e => {\n              if (e.status === 'accepted')\n                return <PosedAcceptedOrder {...e} onShipped={shipOrder(e)} />\n              if (e.status === 'delivered')\n                return (\n                  <DelieveredOrder {...e} onDelivered={deliveredOrder(e)} />\n                )\n              if (e.status === 'done') return null\n              return (\n                <IncomingOrder\n                  {...e}\n                  onAccept={acceptOrder(e)}\n                  onDecline={deleteOrder(e.id)}\n                />\n              )\n            })}\n          </div>\n        </div>\n      )}\n      <Button\n        onClick={() => {\n          setAuth({\n            token: null,\n            loggedIn: false,\n            restaurant: ''\n          })\n        }}\n      >\n        LOG OUT\n      </Button>\n    </div>\n  )\n}\n\nconst styles = {\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: '200px 200px 200px',\n    gridColumnGap: '18px',\n    gridRowGap: '18px'\n  },\n  gridContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n}\n\nexport default DashboardScreen\n","import React, { useState, useEffect } from 'react'\nimport { useCookies } from 'react-cookie'\nimport './App.css'\nimport RegisterScreen from './screens/RegisterScreen'\nimport AuthContext from './globals/useToken'\nimport DashboardScreen from './screens/DashboardScreen'\n\nfunction App() {\n  const [auth, setAuth] = useState({\n    token: undefined,\n    restaurantName: null,\n    loggedIn: false\n  })\n\n  const [cookies, setCookie] = useCookies(['token', 'restaurant', 'loggedIn'])\n  const setAuthContext = ({ token, restaurant, loggedIn }) => {\n    setAuth({\n      token,\n      restaurantName: restaurant,\n      loggedIn\n    })\n    setCookie('token', token)\n    setCookie('restaurant', restaurant)\n    setCookie('loggedIn', loggedIn)\n  }\n\n  useEffect(() => {\n    setAuthContext(cookies)\n  }, [])\n\n  return (\n    <AuthContext.Provider value={[auth, setAuthContext]}>\n      {auth.loggedIn ? <DashboardScreen /> : <RegisterScreen />}\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}