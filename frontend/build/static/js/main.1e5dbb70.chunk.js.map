{"version":3,"sources":["globals/useToken.js","components/FoodTypes.js","screens/RegisterScreen.js","screens/DashboardScreen.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","restaurantName","token","loggedIn","FoodTypes","_ref","currentTypes","setTypes","foodTypes","react_default","a","createElement","style","flexDirection","padding","map","e","index_es","key","onClick","includes","splice","indexOf","Object","toConsumableArray","concat","label","variant","FOOD_TYPES","registerRestaurant","name","latLng","types","fetch","method","headers","Content-Type","body","JSON","stringify","location","then","r","json","styles","container","flex","alignItems","justifyContent","height","paddingTop","alignSelf","card","width","content","RegisterScreen","_useState","useState","_useState2","slicedToArray","setName","_useState3","lat","lng","_useState4","setLatLng","_useState5","_useState6","_useContext","useContext","_useContext2","setAuth","title","placeholder","value","onChange","target","components_FoodTypes","alert","console","log","error","restaurant","orders","picture","deliverTime","IncomingOrder","_ref2","component","alt","image","fontSize","paddingBottom","AcceptedOrder","_ref3","grid","display","gridTemplateColumns","gridColumnGap","gridRowGap","gridContainer","DashboardScreen","useEffect","socket","WebSocket","addEventListener","objectSpread","paddingRight","App","undefined","auth","_useCookies","useCookies","_useCookies2","cookies","setCookie","setAuthContext","useToken","Provider","screens_DashboardScreen","screens_RegisterScreen","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e5dbb70.chunk.js","sourcesContent":["import { createContext } from 'react'\n\nconst AuthContext = createContext({\n  restaurantName: '',\n  token: null,\n  loggedIn: false\n})\n\nexport default AuthContext\n","import React from 'react'\nimport { Chip } from '@material-ui/core'\n\nconst FoodTypes = ({ currentTypes, setTypes, foodTypes }) => (\n  <div style={{ flexDirection: 'row', padding: 8 }}>\n    {foodTypes.map(e => (\n      <Chip\n        key={e}\n        onClick={() => {\n          if (currentTypes.includes(e)) {\n            currentTypes.splice(currentTypes.indexOf(e), 1)\n            setTypes([...currentTypes])\n          } else {\n            setTypes([...currentTypes, e])\n          }\n        }}\n        label={e}\n        variant={currentTypes.includes(e) ? 'default' : 'outlined'}\n        padding={4}\n      />\n    ))}\n  </div>\n)\n\nexport default FoodTypes\n","import React, { useState, useContext } from 'react'\nimport { Input, Card, CardHeader, CardContent, Button } from '@material-ui/core'\nimport AuthContext from '../globals/useToken'\nimport FoodTypes from '../components/FoodTypes'\n\nconst FOOD_TYPES = ['Burger', 'Kebab', 'Pizza']\nconst url = '/restaurant/register'\n\nconst registerRestaurant = ({ name, latLng, types }) =>\n  fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      name,\n      location: latLng,\n      foodTypes: types\n    })\n  }).then(r => r.json())\n\nfunction RegisterScreen() {\n  const [name, setName] = useState('')\n  const [latLng, setLatLng] = useState({ lat: '', lng: '' })\n  const [types, setTypes] = useState([])\n  const { lat, lng } = latLng\n  const [_, setAuth] = useContext(AuthContext)\n\n  const onSubmit = () => {\n    if (name === '' || lat === '' || lng === '')\n      alert('Please enter all the fields.')\n    else {\n      registerRestaurant({ name, latLng, types }).then(r => {\n        console.log(r)\n        if (r.error) {\n          alert(r.error)\n          return null\n        } else {\n          setAuth({\n            restaurant: name,\n            token: r.token\n          })\n        }\n      })\n    }\n  }\n\n  return (\n    <div style={styles.container}>\n      <Card style={styles.card}>\n        <CardHeader title=\"UNLABELLED for restaurants\" />\n        <CardContent style={styles.content}>\n          <Input\n            placeholder=\"restaurant name\"\n            value={name}\n            onChange={e => setName(e.target.value)}\n          />\n          <div style={{ flexDirection: 'row' }}>\n            <Input\n              placeholder=\"lattitude\"\n              value={lat}\n              onChange={e => setLatLng({ lat: e.target.value, lng })}\n            />\n            <Input\n              placeholder=\"longitude\"\n              value={lng}\n              onChange={e => setLatLng({ lat, lng: e.target.value })}\n            />\n          </div>\n          <FoodTypes\n            currentTypes={types}\n            foodTypes={FOOD_TYPES}\n            setTypes={setTypes}\n          />\n          <Button onClick={onSubmit}>Register</Button>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: !'100%',\n    paddingTop: '200px',\n    alignSelf: 'center'\n  },\n  card: { flexDirection: 'column', width: '400px' },\n  content: { flexDirection: 'column' }\n}\n\nexport default RegisterScreen\n","import React, { useContext, useEffect } from 'react'\nimport {\n  Button,\n  Card,\n  CardHeader,\n  CardContent,\n  CardMedia,\n  LinearProgress\n} from '@material-ui/core'\nimport AuthContext from '../globals/useToken'\nimport FoodTypes from '../components/FoodTypes'\n//import ProgressIndicator from '../components/ProgressIndicator'\n\nconst FOOD_TYPES = ['Burger', 'Kebab', 'Pizza']\nconst orders = [\n  {\n    name: 'Pizza ORDER',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes'\n  },\n  {\n    name: 'Food ORDER',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes'\n  },\n  {\n    name: 'Food ORDER',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes'\n  },\n  {\n    name: 'Food ORDER',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes'\n  },\n  {\n    name: 'Food ORDER',\n    picture:\n      'https://upload.wikimedia.org/wikipedia/commons/a/a3/Eq_it-na_pizza-margherita_sep2005_sml.jpg',\n    deliverTime: '30 minutes'\n  }\n]\n\nconst Order = ({ name, picture, deliverTime }) => (\n  <Card style={{ flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      alt=\"Contemplative Reptile\"\n      //   className={classes.media}\n      height=\"140px\"\n      image={picture}\n      title=\"Contemplative Reptile\"\n    />\n    <CardHeader title={name} />\n    <CardContent>Delivery {deliverTime}</CardContent>\n  </Card>\n)\n\nconst IncomingOrder = ({ name, picture, deliverTime }) => (\n  <Card style={{ flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      alt=\"Contemplative Reptile\"\n      height=\"140px\"\n      image={picture}\n      title=\"Contemplative Reptile\"\n    />\n    <CardContent style={{ flexDirection: 'column', alignItems: 'center' }}>\n      <div style={{ fontSize: 23, paddingBottom: 8 }}>{name}</div>\n      <div style={{ paddingBottom: 8 }}>Delivery {deliverTime}</div>\n      <div style={{ flexDirection: 'row' }}>\n        <Button style={{ flex: 1 }}>Accept</Button>\n        <Button style={{ flex: 1 }}>Decline</Button>\n      </div>\n    </CardContent>\n  </Card>\n)\n\nconst AcceptedOrder = ({ name, picture, deliverTime }) => (\n  <Card style={{ flexDirection: 'column' }}>\n    <CardMedia\n      component=\"img\"\n      alt=\"Contemplative Reptile\"\n      height=\"140px\"\n      image={picture}\n      title=\"Contemplative Reptile\"\n    />\n    <CardContent\n      style={{\n        flexDirection: 'column',\n        alignItems: 'center',\n        paddingBottom: '0px !important'\n      }}\n    >\n      <div style={{ fontSize: 23, paddingBottom: 8 }}>{name}</div>\n      <div style={{ paddingBottom: 8 }}>Delivery {deliverTime}</div>\n\n      <Button>Ship it</Button>\n    </CardContent>\n  </Card>\n)\n\nfunction DashboardScreen() {\n  const name = 'Restaurant'\n  const types = ['Burger', 'Kebab']\n  const [{ restaurantName }, setAuth] = useContext(AuthContext)\n  const onDelete = () => {}\n\n  useEffect(() => {\n    const socket = new WebSocket('/ws')\n    console.log(socket)\n    socket.addEventListener('message', e => {\n      console.log(e)\n    })\n  }, [])\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        alignItems: 'center',\n        justifyContent: 'center',\n        alignSelf: 'center',\n        flexDirection: 'column'\n      }}\n    >\n      <h4> !!!! + {restaurantName}</h4>\n      <FoodTypes\n        foodTypes={FOOD_TYPES}\n        currentTypes={['Kebab', 'Pizza']}\n        setTypes={() => {}}\n      />\n      <div style={{ flexDirection: 'row' }}>\n        <div style={styles.gridContainer}>\n          <h4>Incoming orders</h4>\n          <div\n            style={{\n              paddingRight: 89,\n              ...styles.grid\n            }}\n          >\n            {orders.map(IncomingOrder)}\n          </div>\n        </div>\n        <div style={{ flexDirection: 'column' }}>\n          <h4>Accepted Orders</h4>\n          <div\n            style={{\n              ...styles.grid\n            }}\n          >\n            {orders.map(AcceptedOrder)}\n          </div>\n        </div>\n      </div>\n      <Button\n        onClick={() => {\n          setAuth({\n            token: null,\n            restaurant: ''\n          })\n        }}\n      >\n        LOG OUT\n      </Button>\n    </div>\n  )\n}\n\nconst styles = {\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: '200px 200px',\n    gridColumnGap: '10px',\n    gridRowGap: '10px'\n  },\n  gridContainer: {\n    flex: 1,\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n}\n\nexport default DashboardScreen\n","import React, { useState, useEffect } from 'react'\nimport { useCookies } from 'react-cookie'\nimport './App.css'\nimport RegisterScreen from './screens/RegisterScreen'\nimport AuthContext from './globals/useToken'\nimport DashboardScreen from './screens/DashboardScreen'\n\nfunction App() {\n  const [auth, setAuth] = useState({\n    token: undefined,\n    restaurantName: null,\n    loggedIn: false\n  })\n\n  const [cookies, setCookie] = useCookies(['token', 'restaurant'])\n  const setAuthContext = ({ token, restaurant }) => {\n    setAuth({\n      token,\n      restaurantName: restaurant\n    })\n    setCookie('token', token)\n    setCookie('restaurant', restaurant)\n  }\n\n  useEffect(() => {\n    setAuthContext(cookies)\n  }, [])\n  console.log(auth.token)\n  if (auth.token === null) console.log('ITS NULL')\n  return (\n    <AuthContext.Provider value={[auth, setAuthContext]}>\n      {auth.token !== null ? <DashboardScreen /> : <RegisterScreen />}\n    </AuthContext.Provider>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}